const ProtocolMessages = require("./protocol-spec/wpilib-websocket.json");
const fs = require("fs");

function fieldPrefix(direction) {
    if (direction === "from_robot_code") {
        return "<";
    }
    else if (direction === "to_robot_code") {
        return ">";
    }
    else if (direction === "bidir") {
        return "<>";
    }
}

const fileHeading =
"// AUTOGENERATED FILE. DO NOT MODIFY.\n" +
"// Generated via `npm run gen-protocol`\n\n" +
"// Generated on: " + (new Date()) + "\n\n";

const messageTypes = [];

let tsOutput = fileHeading;

// Iterate through the messages
ProtocolMessages.messages.forEach((msgDescriptor) => {
    messageTypes.push(msgDescriptor.messageType + "Payload");

    let deviceTypeKey = `${msgDescriptor.messageType}DeviceType`;
    if (msgDescriptor.messageType.indexOf("SimDevice") === 0) {
        deviceTypeKey = `${msgDescriptor.messageType}Type`;
    }

    tsOutput +=
    "// " + msgDescriptor.description + "\n" +
    `export const ${deviceTypeKey}: string = "${msgDescriptor.messageType}";\n` +
    `export interface ${msgDescriptor.messageType}Payload {\n`;

    if (msgDescriptor.payload instanceof Array) {
        msgDescriptor.payload.forEach((fieldDescriptor, index) => {
            if (fieldDescriptor.fieldDescription) {
                tsOutput +=
                `    // ${fieldDescriptor.fieldDescription}\n`;
            }

            tsOutput +=
            `    "${fieldPrefix(fieldDescriptor.fieldDirection)}${fieldDescriptor.fieldName}"?: ${fieldDescriptor.dataType}${fieldDescriptor.isArray ? "[]" : ""};\n`;

        });
    }
    else if (msgDescriptor.payload.isDynamic) {
        tsOutput +=
        "    [key: string]: any;\n";
    }

    tsOutput += "}\n\n";
});

tsOutput += "// This should be an OR of all the payload types\n";

const payloadTypes = messageTypes.join(" | ");

tsOutput += `type WpilibWsMsgPayload = ${payloadTypes};\n\n`;

tsOutput +=
"// This is the envelope type\n" +
"export interface IWpilibWsMsg {\n" +
"    type: string;\n" +
"    device: string;\n" +
"    data: WpilibWsMsgPayload;\n" +
"}\n\n";

tsOutput +=
"export function isValidWpilibWsMsg(msg: any): boolean {\n" +
"    if (typeof msg !== \"object\") {\n" +
"        return false;\n" +
"    }\n\n" +
"    if (msg.type === undefined || typeof msg.type !== \"string\") {\n" +
"        return false;\n" +
"    }\n\n" +
"    if (msg.type === undefined || typeof msg.device !== \"string\") {\n" +
"        return false;\n" +
"    }\n\n" +
"    if (msg.data === undefined) {\n" +
"        return false;\n" +
"    }\n\n" +
"    return true;\n" +
"}\n";

fs.writeFileSync("./src/protocol/wpilib-ws-proto-messages.ts", tsOutput);
